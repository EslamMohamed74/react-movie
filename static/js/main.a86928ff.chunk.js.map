{"version":3,"sources":["components/Navbar/Navbar.js","components/HeroImage/HeroImage.js","components/SingleMovie/SingleMovie.js","components/Search/Search.js","components/Movies/Movies.js","components/Loader/Loader.js","components/LoadMore/LoadMore.js","components/Home/Home.js","components/MovieMasterInfo/MovieMasterInfo.js","components/SingleActor/SingleActor.js","components/Actors/Actors.js","components/MovieInfo/MovieInfo.js","components/SingleActorInfo/SingleActorInfo.js","components/ActorInfo/ActorInfo.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","src","alt","HeroImage","props","hero","style","background","backdrop_path","title","overview","SingleMovie","movie","id","poster_path","Search","state","movies","query","searchHandler","event","newValue","target","value","setState","clickHandler","preventDefault","length","axios","get","then","response","data","results","singleMovie","this","map","index","key","aria-hidden","onSubmit","type","placeholder","onChange","Component","Movies","Loader","LoadMore","onClick","loadMore","Home","getPopularMovies","page","concat","heroImage","updateCurrentPage","old","currentPage","bind","formatter","Intl","NumberFormat","currency","minimumFractionDigits","MovieMasterInfo","info","min","max","optimum","low","high","vote_average","num","runtime","Math","floor","format","budget","revenue","SingleActor","image","profile_path","name","character","Actors","actors","actor","MovieInfo","movieInfo","getMovieInfo","movieId","match","params","getMovieActors","cast","SingleActorInfo","console","log","class","height","width","known_for_department","birthday","place_of_birth","popularity","ActorInfo","actorInfo","getActorInfo","personId","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a86928ff.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport './Navbar.css';\n\nfunction Navbar() {\n    return (\n        <div className=\"rmdb-header\">\n            <div className=\"rmdb-header-content\">\n                <Link to=\"/\">\n                    <img className=\"rmdb-logo\" src=\"https://i.imgur.com/0GdlwCQ.png\" alt=\"rmdb-logo\" />\n                </Link>\n                <img className=\"rmdb-tmdb-logo\" src=\"https://i.imgur.com/lYZGBVp.png\" alt=\"tmdb-logo\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n\nimport './HeroImage.css';\n\nfunction HeroImage(props) {\n    return (\n\n        props.hero\n        ?\n        <div className=\"rmdb-heroimage\" style={{\n                background: `linear-gradient(rgba(0, 0, 0, 0) 39%, rgba(0, 0, 0, 0) 41%, rgba(0, 0, 0, 0.65) 100%), url('http://image.tmdb.org/t/p/w1280/${props.hero.backdrop_path}'), rgb(28, 28, 28)`\n            }}>\n            <div className=\"rmdb-heroimage-content\">\n                <div className=\"rmdb-heroimage-text\">\n                    <h1>{props.hero.title}</h1>\n                    <p>{props.hero.overview}</p>\n                </div>\n            </div>\n        </div>\n        :\n        null\n    )\n}\n\n\nexport default HeroImage;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport \"./SingleMovie.css\";\n\nfunction SingleMovie(props) {\n    return (\n        <div className=\"rmdb-grid-element\">\n            <div className=\"rmdb-moviethumb\">\n                <Link to={`/movie/${props.movie.id}`}>\n                    <img src={`http://image.tmdb.org/t/p/w500/${props.movie.poster_path}`}\n                            alt=\"moviethumb\"/>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default SingleMovie;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport SingleMovie from \"./../SingleMovie/SingleMovie\";\nimport \"./Search.css\";\n\nclass Search extends Component {\n\n\n\n    state = {\n        movies: [],\n        query: ''\n    };\n\n    searchHandler = event => {\n        let newValue = event.target.value;\n        this.setState({ query: newValue });\n\n    }\n\n    clickHandler = event => {\n        event.preventDefault();\n        if (this.state.query.length > 0) {\n            axios.get(`https://api.themoviedb.org/3/search/movie?api_key=b9afb4b37a118c901bdbfcccfa450fe0&language=en-US&https://api.themoviedb.org/3/search/movie?api_key=b9afb4b37a118c901bdbfcccfa450fe0&language=en-US&query=${this.state.query}&page=1&include_adult=falsepage=1&include_adult=false`)\n                .then(response => {\n\n                    this.setState({\n                        movies: response.data.results\n                    });\n\n\n                })\n        } else {\n            this.setState({\n                movies: []\n            });\n        }\n\n    }\n    render() {\n        let singleMovie = this.state.movies ? this.state.movies.map((movie, index) => {\n            return <SingleMovie movie={movie} key={index} />\n        }) : null;\n\n        return (\n            <div>\n\n\n                <div className=\"rmdb-searchbar\">\n                    <div className=\"rmdb-searchbar-content\">\n                        <span aria-hidden=\"true\" className=\"fa fa-search fa-2x rmdb-fa-search\"></span>\n\n\n                        <form onSubmit={this.clickHandler}>\n                            <input type=\"text\" className=\"rmdb-searchbar-input\" placeholder=\"Write what are you search for and press enter\" onChange={event => this.searchHandler(event)} />\n\n                        </form>\n                    </div>\n\n                </div>\n                {singleMovie.length > 0 ? <div className=\"rmdb-home-grid\">\n                    <div className=\"rmdb-grid\">\n                        <h1>Best Matches</h1>\n                        <div className=\"rmdb-grid-content\">\n                            {singleMovie.length > 0 ? singleMovie : ''}\n                        </div>\n                    </div>\n\n                </div> : ''}\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React from \"react\";\n\nimport \"./Movies.css\";\n\nimport SingleMovie from \"./../SingleMovie/SingleMovie\";\n\n\nfunction Movies(props) {\n\n    let movies = props.movies.map((movie, index) => {\n        return <SingleMovie key={index} movie={movie} />\n    });\n\n    return (\n        <div className=\"rmdb-home-grid\">\n            <div className=\"rmdb-grid\">\n                <h1>Popular Movies</h1>\n                <div className=\"rmdb-grid-content\">\n                    { movies.length > 0 ? movies : '' }\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Movies;","import React from 'react';\n\nimport \"./Loader.css\";\n\nfunction Loader() {\n    return (\n        <div className=\"loader\"></div>\n    );\n}\n\nexport default Loader;","import React, { Component } from \"react\";\n\n\nimport \"./LoadMore.css\";\n\nclass LoadMore extends Component {\n\n    render() {\n        return (\n            <div className=\"rmdb-loadmorebtn\">\n                <button id=\"loadMore\" type=\"button\" onClick={this.props.loadMore}>Load more</button>\n            </div>\n        );\n    }\n}\n\nexport default LoadMore;","import React, { Component } from \"react\";\nimport axios from 'axios';\n\n\nimport HeroImage from './../HeroImage/HeroImage';\nimport Search from './../Search/Search';\nimport Movies from './../Movies/Movies';\nimport Loader from './../Loader/Loader';\nimport LoadMore from \"./../LoadMore/LoadMore\";\n\nimport \"./Home.css\";\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            currentPage: 1,\n            heroImage: null\n        };\n        this.updateCurrentPage = this.updateCurrentPage.bind(this);\n    }\n    \n\n   \n    getPopularMovies = (page) => {\n\n\n        axios.get('https://api.themoviedb.org/3/movie/popular?api_key=b9afb4b37a118c901bdbfcccfa450fe0&language=en-US&page=' + page)\n            .then(response => {\n                this.setState({\n                    movies: this.state.movies.concat(response.data.results),\n                    heroImage: response.data.results[0]\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.getPopularMovies(this.state.currentPage);\n    }\n    \n\n    updateCurrentPage = () => {\n        this.setState((old)=>{\n            return {currentPage:old.currentPage + 1  }\n        })       \n         this.getPopularMovies(this.state.currentPage);\n     }\n\n\n    render() {\n        return (\n            <div className=\"rmdb-home\">\n                <HeroImage hero={this.state.heroImage} />\n\n                <Search />\n\n                {!this.state.movies ? <Loader /> : <Movies movies={this.state.movies} />}\n                <LoadMore loadMore={this.updateCurrentPage} />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MovieMasterInfo.css\";\nimport Loader from \"../Loader/Loader\";\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n});\n\nfunction timeConvert(num) {\n    var hours = Math.floor(num / 60);\n    var minutes = num % 60;\n    return hours + \"h \" + minutes + \"m\";\n}\n\nfunction MovieMasterInfo(props) {\n    return (\n        props.info\n        ?\n            <div>\n                <div className=\"rmdb-navigation\">\n                    <div className=\"rmdb-navigation-content\">\n                        <Link to=\"/\">\n                            <p>Home</p>\n                        </Link>\n                        <p>/</p>\n                        <p>{props.info.title}</p>\n                    </div>\n                </div>\n                <div className=\"rmdb-movieinfo\"\n                    style={{\n                        background: `url(http://image.tmdb.org/t/p/w1280/${props.info.backdrop_path})`}}>\n                    <div className=\"rmdb-movieinfo-content\">\n                        <div className=\"rmdb-movieinfo-thumb\">\n                            <div className=\"rmdb-moviethumb\">\n                                <img\n                                    src={`http://image.tmdb.org/t/p/w500/${props.info.poster_path}`}\n                                    alt=\"moviethumb\"/>\n                            </div>\n                        </div>\n                        <div className=\"rmdb-movieinfo-text\">\n                            <h1>{props.info.title}</h1>\n                            <h3>PLOT</h3>\n                            <p>{props.info.overview}</p>\n                            <h3>IMDB RATING</h3>\n                            <div className=\"rmdb-rating\">\n                                <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.info.vote_average * 10}></meter>\n                                <p className=\"rmdb-score\">{props.info.vote_average}</p>\n                            </div>\n                            <h3>DIRECTOR</h3>\n                            <p className=\"rmdb-director\">David Lowery</p>\n                        </div>\n                        <span aria-hidden=\"true\" className=\"fa fa-film fa-5x fa-film\"></span>\n                    </div>\n                </div>\n                <div className=\"rmdb-movieinfobar\">\n                    <div className=\"rmdb-movieinfobar-content\">\n                        <div className=\"rmdb-movieinfobar-content-col\">\n                            <span aria-hidden=\"true\" className=\"fa fa-clock-o fa-2x fa-time\"></span>\n                            <span className=\"rmdb-movieinfobar-info\">Running time: {timeConvert(props.info.runtime)}</span>\n                        </div>\n                        <div className=\"rmdb-movieinfobar-content-col\">\n                            <span aria-hidden=\"true\" className=\"fa fa-money fa-2x fa-budget\"></span>\n                            <span className=\"rmdb-movieinfobar-info\">Budget: {formatter.format(props.info.budget)}</span>\n                        </div>\n                        <div className=\"rmdb-movieinfobar-content-col\">\n                            <span aria-hidden=\"true\" className=\"fa fa-ticket fa-2x fa-revenue\"></span>\n                            <span className=\"rmdb-movieinfobar-info\">Revenue: {formatter.format(props.info.revenue)}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        :\n        <Loader />\n    )\n}\n\nexport default MovieMasterInfo;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SingleActor.css\";\n\nfunction SingleActor(props) {\n\n    let image = props.info.profile_path ? <img\n                    src={`http://image.tmdb.org/t/p/w154/${props.info.profile_path}`}\n                    alt=\"actorthumb\"/>\n                : <img src=\"https://image.shutterstock.com/image-vector/no-image-available-sign-internet-600w-261719003.jpg\" alt=\"noImage\" />;\n    return (\n        <div className=\"rmdb-grid-element\">\n            <div className=\"rmdb-actor\">\n            <Link to={`/person/${props.info.id}`}>\n                {image}\n            </Link>\n                <span className=\"rmdb-actor-name\">{props.info.name}</span>\n                <span className=\"rmdb-actor-character\">{props.info.character}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleActor;","import React from \"react\";\n\nimport SingleActor from \"./../SingleActor/SingleActor\";\n\nfunction Actors(props) {\n\n    let actors = props.actors ? props.actors.map((actor, index) => {\n        return <SingleActor info={actor} key={index} />\n    }) : null;\n\n\n    return (\n        <div className=\"rmdb-movie-grid\">\n                <div className=\"rmdb-grid\">\n                    <h1>Actors</h1>\n                    <div className=\"rmdb-grid-content\">\n                        {actors}\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default Actors;","import React, { Component } from \"react\";\n\n import axios from \"axios\";\n\n\nimport MovieMasterInfo from \"./../MovieMasterInfo/MovieMasterInfo\";\nimport Actors from \"./../Actors/Actors\";\n\nimport \"./MovieInfo.css\";\n\nclass MovieInfo extends Component {\n\n    state = {\n        movieInfo: null,\n        actors: null\n    }\n\n    getMovieInfo = () => {\n        const movieId = this.props.match.params.movieId;\n        \n\n         axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=b9afb4b37a118c901bdbfcccfa450fe0&language=en-US`)\n             .then(response => {\n                 this.setState({\n                     movieInfo: response.data\n                 });\n             });\n    }\n\n\n    getMovieActors = () => {\n        const movieId = this.props.match.params.movieId;\n\n         axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=b9afb4b37a118c901bdbfcccfa450fe0`)\n             .then(response => {\n                 this.setState({\n                     actors: response.data.cast\n                 });\n             });\n    }\n\n    componentDidMount() {\n        this.getMovieInfo();\n\n        this.getMovieActors();\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-movie\">\n                <MovieMasterInfo info={this.state.movieInfo} />\n\n                <Actors actors={this.state.actors} />\n            </div>\n        );\n    }\n}\n\nexport default MovieInfo;","import React from 'react';\r\nimport './SingleActorInfo.css'\r\n\r\nfunction SingleActorInfo(props) {\r\n    console.log(props);\r\n    return (\r\n        <div class=\"actorContainer\">\r\n            <div class=\"avatar\">\r\n                <img src={`http://image.tmdb.org/t/p/w154/${props.info.profile_path}`} height=\"200\" width=\"200\" alt=\"noImage\"/>\r\n                <img src=\"http://i1112.photobucket.com/albums/k497/animalsbeingdicks/abd-3-12-2015.gif~original\" height=\"200\" width=\"200\" alt=\"noImage\"/>\r\n            </div>\r\n            <h2>{props.info.name}</h2>\r\n            <h4>{props.info.known_for_department}</h4>\r\n            <p>Birthday : {props.info.birthday}</p>\r\n            <p>Place Of Birth : {props.info.place_of_birth}</p>\r\n            <p>Popularity : {props.info.popularity}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleActorInfo;\r\n","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport SingleActorInfo from './../SingleActorInfo/SingleActorInfo';\r\n\r\nclass ActorInfo extends Component{\r\n\r\n    state={\r\n        actorInfo:null,\r\n    };\r\n    \r\n    getActorInfo = () => {\r\n        const personId = this.props.match.params.personId;\r\n        axios.get(` https://api.themoviedb.org/3/person/${personId}?api_key=b9afb4b37a118c901bdbfcccfa450fe0&language=en-US`)\r\n        .then(response =>{\r\n           \r\n              this.setState({\r\n                actorInfo : response.data,\r\n              });\r\n        })\r\n    };\r\n    componentDidMount(){\r\n        this.getActorInfo();\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n               {this.state.actorInfo ? <SingleActorInfo info={this.state.actorInfo}/> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActorInfo;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport MovieInfo from './components/MovieInfo/MovieInfo';\nimport ActorInfo from './components/ActorInfo/ActorInfo';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Navbar />\n\n        <Route path='/react-movie/' exact component={Home} />\n        <Route path='/react-movie/movie/:movieId' component={MovieInfo} />\n        <Route path='/react-movie/person/:personId' component={ActorInfo} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}